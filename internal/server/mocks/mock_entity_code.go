// Code generated by MockGen. DO NOT EDIT.
// Source: internal/server/domain/entity_code/entity_code.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEntityCodeStorage is a mock of EntityCodeStorage interface.
type MockEntityCodeStorage struct {
	ctrl     *gomock.Controller
	recorder *MockEntityCodeStorageMockRecorder
}

// MockEntityCodeStorageMockRecorder is the mock recorder for MockEntityCodeStorage.
type MockEntityCodeStorageMockRecorder struct {
	mock *MockEntityCodeStorage
}

// NewMockEntityCodeStorage creates a new mock instance.
func NewMockEntityCodeStorage(ctrl *gomock.Controller) *MockEntityCodeStorage {
	mock := &MockEntityCodeStorage{ctrl: ctrl}
	mock.recorder = &MockEntityCodeStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEntityCodeStorage) EXPECT() *MockEntityCodeStorageMockRecorder {
	return m.recorder
}

// GetEntityCodes mocks base method.
func (m *MockEntityCodeStorage) GetEntityCodes(ctx context.Context) (map[string]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEntityCodes", ctx)
	ret0, _ := ret[0].(map[string]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEntityCodes indicates an expected call of GetEntityCodes.
func (mr *MockEntityCodeStorageMockRecorder) GetEntityCodes(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEntityCodes", reflect.TypeOf((*MockEntityCodeStorage)(nil).GetEntityCodes), ctx)
}
